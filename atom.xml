<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>狗敦A季</title>
  
  <subtitle>贾宛龙的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jiawanlong.github.io/"/>
  <updated>2018-12-27T09:06:02.530Z</updated>
  <id>https://jiawanlong.github.io/</id>
  
  <author>
    <name>狗敦A季&quot;</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>原生js封装ajax</title>
    <link href="https://jiawanlong.github.io/2018/12/27/%E5%8E%9F%E7%94%9Fjs%E5%B0%81%E8%A3%85ajax/"/>
    <id>https://jiawanlong.github.io/2018/12/27/原生js封装ajax/</id>
    <published>2018-12-27T09:03:50.745Z</published>
    <updated>2018-12-27T09:06:02.530Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line">var $ajax = function () &#123;</span><br><span class="line"></span><br><span class="line">    //默认请求参数</span><br><span class="line">    var _options = &#123;</span><br><span class="line">        url: null,</span><br><span class="line">        type: &apos;GET&apos;,</span><br><span class="line">        data: null,</span><br><span class="line">        dataType: &apos;text&apos;,</span><br><span class="line">        jsonp: &apos;callback&apos;,</span><br><span class="line">        jsonpCallback: &apos;jsonpCallback&apos;,</span><br><span class="line">        async: true,</span><br><span class="line">        cache: true,</span><br><span class="line">        timeout: null,</span><br><span class="line">        contentType: &apos;application/x-www-form-urlencoded&apos;,</span><br><span class="line">        success: null,</span><br><span class="line">        fail: null</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // json转化为字符串</span><br><span class="line">    var _param = function (data) &#123;</span><br><span class="line">        var str = &apos;&apos;;</span><br><span class="line">        if (!data || _empty(data)) &#123;</span><br><span class="line">            return str;</span><br><span class="line">        &#125;</span><br><span class="line">        for (var key in data) &#123;</span><br><span class="line">            str += key + &apos;=&apos; + data[key] + &apos;&amp;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">        str = str.slice(0, -1);</span><br><span class="line">        return str;</span><br><span class="line">    &#125;</span><br><span class="line">    //判断对象是否为空</span><br><span class="line">    var _empty = function (obj) &#123;</span><br><span class="line">        for (var key in obj) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var _extend = function (target, options) &#123;</span><br><span class="line">        if (typeof target !== &apos;object&apos; || typeof options !== &apos;object&apos;) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        var copy, clone, name;</span><br><span class="line">        for (name in options) &#123;</span><br><span class="line">            if (options.hasOwnProperty(name) &amp;&amp; !target.hasOwnProperty(name)) &#123;</span><br><span class="line">                target[name] = options[name];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return target;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 自定义text转化json格式</span><br><span class="line">    var parseJSON = function (text) &#123;</span><br><span class="line">        if (typeof text !== &apos;string&apos;) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        if (JSON &amp;&amp; JSON.parse) &#123;</span><br><span class="line">            return JSON.parse(text);</span><br><span class="line">        &#125;</span><br><span class="line">        return (new Function(&apos;return &apos; + text))();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // jsonp处理函数</span><br><span class="line">    function _sendJsonpRequest(url, callbackName, succCallback) &#123;</span><br><span class="line"></span><br><span class="line">        var script = document.createElement(&apos;script&apos;);</span><br><span class="line"></span><br><span class="line">        script.type = &quot;text/javascript&quot;;</span><br><span class="line">        script.src = url;</span><br><span class="line"></span><br><span class="line">        document.body.appendChild(script);</span><br><span class="line">        // 如果用户自己定义了回调函数，就用自己定义的，否则，调用success函数</span><br><span class="line">        window[callbackName] = window[callbackName] || succCallback;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return function (options) &#123;</span><br><span class="line"></span><br><span class="line">        // 没有传参或者没有url，抛出错误</span><br><span class="line">        if (!options || !options.url) &#123;</span><br><span class="line">            throw (&apos;参数错误！&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 继承操作</span><br><span class="line">        options.type = options.type.toUpperCase();</span><br><span class="line">        _extend(options, _options);</span><br><span class="line"></span><br><span class="line">        /*jsonp部分，直接返回*/</span><br><span class="line">        if (options.dataType === &apos;jsonp&apos;) &#123;</span><br><span class="line">            var jsonpUrl = options.url.indexOf(&apos;?&apos;) &gt; -1 ? options.url : options.url +</span><br><span class="line">                &apos;?&apos; + options.jsonp + &apos;=&apos; + options.jsonpCallback;</span><br><span class="line"></span><br><span class="line">            _sendJsonpRequest(jsonpUrl, options.jsonpCallback, options.success);</span><br><span class="line"></span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //XMLHttpRequest传参无影响</span><br><span class="line">        var xhr = new(window.XMLHttpRequest || ActiveXObject)(&apos;Microsoft.XMLHTTP&apos;);</span><br><span class="line"></span><br><span class="line">        // get搜索字符串</span><br><span class="line">        var search = &apos;&apos;;</span><br><span class="line"></span><br><span class="line">        // 将data序列化</span><br><span class="line">        var param = _param(options.data)</span><br><span class="line"></span><br><span class="line">        if (options.type === &apos;GET&apos;) &#123;</span><br><span class="line">            search = (options.url.indexOf(&apos;?&apos;) &gt; -1 ? &apos;&amp;&apos; : &apos;?&apos;) + param;</span><br><span class="line">            if (!options.cache) &#123;</span><br><span class="line">                search += &apos;&amp;radom=&apos; + Math.random();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            param = null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        xhr.open(options.type, options.url + search, options.async);</span><br><span class="line"></span><br><span class="line">        xhr.onreadystatechange = function () &#123;</span><br><span class="line">            if (xhr.readyState == 4) &#123;</span><br><span class="line">                if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300 || xhr.status == 304) &#123;</span><br><span class="line">                    var text = xhr.responseText;</span><br><span class="line">                    // json格式转换</span><br><span class="line">                    if (options.dataType == &apos;json&apos;) &#123;</span><br><span class="line">                        text = parseJSON(text)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    if (typeof options.success === &apos;function&apos;) &#123;</span><br><span class="line"></span><br><span class="line">                        options.success(text, xhr.status)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; else &#123;</span><br><span class="line"></span><br><span class="line">                    if (typeof options.fail === &apos;function&apos;) &#123;</span><br><span class="line">                        options.fail(&apos;获取失败&apos;, 500)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        xhr.setRequestHeader(&apos;content-type&apos;, options.contentType);</span><br><span class="line">        // get请求时param时null</span><br><span class="line">        xhr.send(param);</span><br><span class="line"></span><br><span class="line">        // 如果设置了超时，就定义</span><br><span class="line">        if (typeof options.timeout === &apos;number&apos;) &#123;</span><br><span class="line">            // ie9+</span><br><span class="line">            if (xhr.timeout) &#123;</span><br><span class="line">                xhr.timeout = options.timeout;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                setTimeout(function () &#123;</span><br><span class="line">                    xhr.abort();</span><br><span class="line">                &#125;, options.timeout)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">var aaaa = null</span><br><span class="line">$ajax(&#123;</span><br><span class="line">    url: &apos;http://172.16.4.190:8088/dataflow/services/siteManage/getSiteList.json&apos;,</span><br><span class="line">    type: &apos;get&apos;,</span><br><span class="line">    dataType: &apos;json&apos;,</span><br><span class="line">    timeout: 1000,</span><br><span class="line">    data: &#123;</span><br><span class="line">        pageindex: &quot;1&quot;,</span><br><span class="line">        pagesize: &quot;10&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    async: false,</span><br><span class="line">    success: function (data, status) &#123;</span><br><span class="line">        aaaa = data.data;</span><br><span class="line">    &#125;,</span><br><span class="line">    fail: function (err, status) &#123;</span><br><span class="line">        console.log(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">console.log(aaaa)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="原生js" scheme="https://jiawanlong.github.io/tags/%E5%8E%9F%E7%94%9Fjs/"/>
    
      <category term="ajax" scheme="https://jiawanlong.github.io/tags/ajax/"/>
    
  </entry>
  
  <entry>
    <title>ES6第二课、字符串扩展</title>
    <link href="https://jiawanlong.github.io/2018/12/27/ES6%E7%AC%AC%E4%BA%8C%E8%AF%BE%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%89%A9%E5%B1%95/"/>
    <id>https://jiawanlong.github.io/2018/12/27/ES6第二课、字符串扩展/</id>
    <published>2018-12-27T09:00:42.471Z</published>
    <updated>2018-12-27T09:03:21.234Z</updated>
    
    <content type="html"><![CDATA[<h3 id="3-1-字符串的遍历器"><a href="#3-1-字符串的遍历器" class="headerlink" title="3.1 字符串的遍历器"></a>3.1 字符串的遍历器</h3><p>字符串可以被for…of循环遍历<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for (let codePoint of &apos;foo&apos;) &#123;</span><br><span class="line">  console.log(codePoint)</span><br><span class="line">&#125;</span><br><span class="line">// &quot;f&quot;</span><br><span class="line">// &quot;o&quot;</span><br><span class="line">// &quot;o&quot;</span><br></pre></td></tr></table></figure></p><h3 id="3-2-includes-startsWith-endsWith"><a href="#3-2-includes-startsWith-endsWith" class="headerlink" title="3.2 includes(), startsWith(), endsWith()"></a>3.2 includes(), startsWith(), endsWith()</h3><ul><li>includes()：返回布尔值，表示是否找到了参数字符串。</li><li>startsWith()：返回布尔值，表示参数字符串是否在原字符串的头部。</li><li>endsWith()：返回布尔值，表示参数字符串是否在原字符串的尾部。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let s = &apos;Hello world!&apos;;</span><br><span class="line">s.startsWith(&apos;Hello&apos;) // true</span><br><span class="line">s.endsWith(&apos;!&apos;) // true</span><br><span class="line">s.includes(&apos;o&apos;) // true</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3-repeat"><a href="#3-3-repeat" class="headerlink" title="3.3 repeat()"></a>3.3 repeat()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;x&apos;.repeat(3) // &quot;xxx&quot;</span><br><span class="line">&apos;hello&apos;.repeat(2) // &quot;hellohello&quot;</span><br><span class="line">&apos;na&apos;.repeat(0) // &quot;&quot;</span><br></pre></td></tr></table></figure><h3 id="3-4-模板字符串"><a href="#3-4-模板字符串" class="headerlink" title="3.4 模板字符串"></a>3.4 模板字符串</h3><p>如果使用模板字符串表示多行字符串，所有的空格和缩进都会被保留在输出之中.如果不想要这个换行，可以使用trim方法消除它。<br><strong>模板字符串中嵌入变量，需要将变量名写在${}之中。</strong><br>传统的 JavaScript 语言，输出模板通常是这样写的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&apos;#result&apos;).append(</span><br><span class="line">  &apos;There are &lt;b&gt;&apos; + basket.count + &apos;&lt;/b&gt; &apos; +</span><br><span class="line">  &apos;items in your basket, &apos; +</span><br><span class="line">  &apos;&lt;em&gt;&apos; + basket.onSale +</span><br><span class="line">  &apos;&lt;/em&gt; are on sale!&apos;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>ES6 引入了模板字符串解决这个问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(&apos;#result&apos;).append(`</span><br><span class="line">  There are &lt;b&gt;$&#123;basket.count&#125;&lt;/b&gt; items</span><br><span class="line">   in your basket, &lt;em&gt;$&#123;basket.onSale&#125;&lt;/em&gt;</span><br><span class="line">  are on sale!</span><br><span class="line">`);</span><br><span class="line"></span><br><span class="line">//**消灭换行**</span><br><span class="line">$(&apos;#result&apos;).append(`</span><br><span class="line">  There are &lt;b&gt;$&#123;basket.count&#125;&lt;/b&gt; items</span><br><span class="line">   in your basket, &lt;em&gt;$&#123;basket.onSale&#125;&lt;/em&gt;</span><br><span class="line">  are on sale!</span><br><span class="line">`.trim());</span><br></pre></td></tr></table></figure></p><p><strong>字符串中嵌入变量</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let name = &quot;Bob&quot;, time = &quot;today&quot;;</span><br><span class="line">`Hello $&#123;name&#125;, how are you $&#123;time&#125;?`</span><br></pre></td></tr></table></figure></p><p>大括号内部可以放入任意的 JavaScript 表达式，可以进行运算，以及引用对象属性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">let x = 1;</span><br><span class="line">let y = 2;</span><br><span class="line"></span><br><span class="line">`$&#123;x&#125; + $&#123;y&#125; = $&#123;x + y&#125;`</span><br><span class="line">// &quot;1 + 2 = 3&quot;</span><br><span class="line"></span><br><span class="line">`$&#123;x&#125; + $&#123;y * 2&#125; = $&#123;x + y * 2&#125;`</span><br><span class="line">// &quot;1 + 4 = 5&quot;</span><br><span class="line"></span><br><span class="line">let obj = &#123;x: 1, y: 2&#125;;</span><br><span class="line">`$&#123;obj.x + obj.y&#125;`</span><br><span class="line">// &quot;3&quot;</span><br></pre></td></tr></table></figure></p><p>模板字符串之中还能调用函数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function fn() &#123;</span><br><span class="line">  return &quot;Hello World&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">`foo $&#123;fn()&#125; bar`</span><br><span class="line">// foo Hello World bar</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;3-1-字符串的遍历器&quot;&gt;&lt;a href=&quot;#3-1-字符串的遍历器&quot; class=&quot;headerlink&quot; title=&quot;3.1 字符串的遍历器&quot;&gt;&lt;/a&gt;3.1 字符串的遍历器&lt;/h3&gt;&lt;p&gt;字符串可以被for…of循环遍历&lt;br&gt;&lt;figure class=
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="ES6" scheme="https://jiawanlong.github.io/tags/ES6/"/>
    
      <category term="字符串" scheme="https://jiawanlong.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>ES6第一课、let和const命令</title>
    <link href="https://jiawanlong.github.io/2018/12/24/ES6%E7%AC%AC%E4%B8%80%E8%AF%BE%E3%80%81let%E5%92%8Cconst%E5%91%BD%E4%BB%A4/"/>
    <id>https://jiawanlong.github.io/2018/12/24/ES6第一课、let和const命令/</id>
    <published>2018-12-24T09:53:56.193Z</published>
    <updated>2018-12-25T01:06:26.515Z</updated>
    
    <content type="html"><![CDATA[<!-- [TOC] --><h2 id="2-1、let命令"><a href="#2-1、let命令" class="headerlink" title="2.1、let命令"></a>2.1、let命令</h2><h3 id="2-1-1-基本用法"><a href="#2-1-1-基本用法" class="headerlink" title="2.1.1 基本用法"></a>2.1.1 基本用法</h3><p>所声明的变量，只在let命令所在的代码块内有效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (let i = 0; i &lt; 10; i++) &#123;&#125;</span><br><span class="line">console.log(i);</span><br><span class="line">// ReferenceError: i is not defined</span><br></pre></td></tr></table></figure></p><h3 id="2-1-2-不存在变量提升"><a href="#2-1-2-不存在变量提升" class="headerlink" title="2.1.2 不存在变量提升"></a>2.1.2 不存在变量提升</h3><p>var命令会发生“变量提升”现象，即变量可以在声明之前使用，值为undefined<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// var 的情况</span><br><span class="line">console.log(foo); // 输出undefined</span><br><span class="line">var foo = 2;</span><br><span class="line"></span><br><span class="line">// let 的情况</span><br><span class="line">console.log(bar); // 报错ReferenceError</span><br><span class="line">let bar = 2;</span><br></pre></td></tr></table></figure></p><h3 id="2-1-3-暂时性死区"><a href="#2-1-3-暂时性死区" class="headerlink" title="2.1.3 暂时性死区"></a>2.1.3 暂时性死区</h3><p>暂时性死区的本质就是，只要一进入当前作用域，所要使用的变量就已经存在了，但是不可获取，只有等到声明变量的那一行代码出现，才可以获取和使用该变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if (true) &#123;</span><br><span class="line">  // 暂时性死区开始</span><br><span class="line">  tmp = &apos;abc&apos;; // ReferenceError</span><br><span class="line">  console.log(tmp); // ReferenceError</span><br><span class="line"></span><br><span class="line">  let tmp; // 暂时性死区结束</span><br><span class="line">  console.log(tmp); // undefined</span><br><span class="line"></span><br><span class="line">  tmp = 123;</span><br><span class="line">  console.log(tmp); // 123</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-1-4-不允许重复声明"><a href="#2-1-4-不允许重复声明" class="headerlink" title="2.1.4 不允许重复声明"></a>2.1.4 不允许重复声明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 报错</span><br><span class="line">function func() &#123;</span><br><span class="line">  let a = 10;</span><br><span class="line">  var a = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 报错</span><br><span class="line">function func() &#123;</span><br><span class="line">  let a = 10;</span><br><span class="line">  let a = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2、块级作用域"><a href="#2-2、块级作用域" class="headerlink" title="2.2、块级作用域"></a>2.2、块级作用域</h2><h3 id="2-2-1、为什么需要块级作用域？"><a href="#2-2-1、为什么需要块级作用域？" class="headerlink" title="2.2.1、为什么需要块级作用域？"></a>2.2.1、为什么需要块级作用域？</h3><p>1、变量i只用来控制循环，但是循环结束后，它并没有消失，泄露成了全局变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var s = &apos;hello&apos;;</span><br><span class="line">for (var i = 0; i &lt; s.length; i++) &#123;</span><br><span class="line">  console.log(s[i]);</span><br><span class="line">&#125;</span><br><span class="line">console.log(i); // 5</span><br></pre></td></tr></table></figure></p><p>2、内层变量可能会覆盖外层变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var tmp = new Date();</span><br><span class="line">function f() &#123;</span><br><span class="line">  console.log(tmp);</span><br><span class="line">  if (false) &#123;</span><br><span class="line">    var tmp = &apos;hello world&apos;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">f(); // undefined</span><br></pre></td></tr></table></figure></p><h3 id="2-2-2、ES6-的块级作用域"><a href="#2-2-2、ES6-的块级作用域" class="headerlink" title="2.2.2、ES6 的块级作用域"></a>2.2.2、ES6 的块级作用域</h3><p>函数有两个代码块，都声明了变量n，运行后输出 5。这表示外层代码块不受内层代码块的影响。如果两次都使用var定义变量n，最后输出的值才是 10<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function f1() &#123;</span><br><span class="line">  let n = 5;</span><br><span class="line">  if (true) &#123;</span><br><span class="line">    let n = 10;</span><br><span class="line">  &#125;</span><br><span class="line">  console.log(n); // 5</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>外层作用域无法读取内层作用域的变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#123;&#123;</span><br><span class="line">  &#123;let insane = &apos;Hello World&apos;&#125;</span><br><span class="line">  console.log(insane); // 报错</span><br><span class="line">&#125;&#125;&#125;&#125;;</span><br></pre></td></tr></table></figure></p><p>内层作用域<strong>可以</strong>定义外层作用域的同名变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#123;&#123;</span><br><span class="line">  let insane = &apos;Hello World&apos;;</span><br><span class="line">  &#123;let insane = &apos;Hello World&apos;&#125;</span><br><span class="line">&#125;&#125;&#125;&#125;;</span><br></pre></td></tr></table></figure></p><p>块级作用域的出现，实际上使得获得广泛应用的立即执行函数表达式（IIFE）不再必要了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// IIFE 写法</span><br><span class="line">(function () &#123;</span><br><span class="line">  var tmp = ...;</span><br><span class="line">  ...</span><br><span class="line">&#125;());</span><br><span class="line"></span><br><span class="line">// 块级作用域写法</span><br><span class="line">&#123;</span><br><span class="line">  let tmp = ...;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2-3、const-命令"><a href="#2-3、const-命令" class="headerlink" title="2.3、const 命令"></a>2.3、const 命令</h2><p>const声明一个只读的常量。一旦声明，常量的值就不能改变。<br>const一旦声明变量，就必须立即初始化，不能留到以后赋值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const foo;</span><br><span class="line">// SyntaxError: Missing initializer in const declaration</span><br><span class="line"></span><br><span class="line">const PI = 3.1415;</span><br><span class="line">PI // 3.1415</span><br><span class="line">PI = 3; // TypeError: Assignment to constant variable.</span><br></pre></td></tr></table></figure></p><p>const的作用域与let命令相同：只在声明所在的块级作用域内有效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (true) &#123;</span><br><span class="line">  const MAX = 5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MAX // Uncaught ReferenceError: MAX is not defined</span><br></pre></td></tr></table></figure></p><h2 id="2-4、ES6-声明变量的六种方法"><a href="#2-4、ES6-声明变量的六种方法" class="headerlink" title="2.4、ES6 声明变量的六种方法"></a>2.4、ES6 声明变量的六种方法</h2><p>ES5 只有两种声明变量的方法：var命令和function命令。ES6 除了添加let和const命令，另外两种声明变量的方法：import命令和class命令。</p><h2 id="2-5、顶层对象和全局变量"><a href="#2-5、顶层对象和全局变量" class="headerlink" title="2.5、顶层对象和全局变量"></a>2.5、顶层对象和全局变量</h2><p>var命令和function命令声明的全局变量，依旧是顶层对象的属性。<br>let命令、const命令、class命令声明的全局变量，不属于顶层对象的属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var a = 1;</span><br><span class="line">window.a // 1</span><br><span class="line"></span><br><span class="line">let b = 1;</span><br><span class="line">window.b // undefined</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- [TOC] --&gt;
&lt;h2 id=&quot;2-1、let命令&quot;&gt;&lt;a href=&quot;#2-1、let命令&quot; class=&quot;headerlink&quot; title=&quot;2.1、let命令&quot;&gt;&lt;/a&gt;2.1、let命令&lt;/h2&gt;&lt;h3 id=&quot;2-1-1-基本用法&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="ES6" scheme="https://jiawanlong.github.io/tags/ES6/"/>
    
      <category term="let const" scheme="https://jiawanlong.github.io/tags/let-const/"/>
    
  </entry>
  
  <entry>
    <title>我爱这被风带走不会再有的每一天</title>
    <link href="https://jiawanlong.github.io/2018/11/19/%E6%88%91%E7%88%B1%E8%BF%99%E8%A2%AB%E9%A3%8E%E5%B8%A6%E8%B5%B0%E4%B8%8D%E4%BC%9A%E5%86%8D%E6%9C%89%E7%9A%84%E6%AF%8F%E4%B8%80%E5%A4%A9/"/>
    <id>https://jiawanlong.github.io/2018/11/19/我爱这被风带走不会再有的每一天/</id>
    <published>2018-11-19T03:02:36.873Z</published>
    <updated>2018-11-19T03:04:23.593Z</updated>
    
    <content type="html"><![CDATA[<p>不重要的一天又开始了，就像昨晚结束时那样。</p><p>我想，没有什么比爱更好的事了。</p><p>爱朴树，爱这没什么旋律又偏重金属的《我去2000年》，压抑而又嘈乱，爱他吞吞吐吐时的样子</p><p>爱小波，爱那些无奈的黑色幽默，又例如《三十而立》，又如那龟头血肿李先生。满天都是星星，好像冻结了的大雨</p><p>爱妈妈做的韭菜盒子，辣椒鸡蛋，酸辣白菜，饺子，热烘烘的白馒头</p><p>爱下雨，淅沥沥的下午，没有时间，没有颜色</p><p>爱可乐，一定是罐装百事</p><p>爱家人，爸妈唠叨给我讲道理，和妹妹一起捉鱼，虽然一只都抓不到，一家四口夏天的中午坐在大门口吊扇下吃饭，母亲有说不完的家常，父亲有讲不完的道理，和妹妹一起吵吵闹闹停不下来</p><p>爱阳光，一定要闭着眼</p><p>爱文学，一定是长篇小说，西北文学，也有例外，如看多少遍都不烦的《鲁滨逊漂流记》，如天马行空的小波</p><p>爱年轻，因为怕老</p><p>爱感动，却不爱哭，记得小时候是一个特别爱哭的人，可现在却屈指可数。上次哭是和妹妹吵架，上上次是外爷去世</p><p>爱香蕉，我还给它取了个名字，幸福果</p><p>爱朋友，也许半年一年不曾联系一次，那一无所有却有趣的年少时光，我们曾一起骑车，一起下棋，一起放风筝</p><p>爱五月，麦子还没黄，天还没热，我们还没长大</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不重要的一天又开始了，就像昨晚结束时那样。&lt;/p&gt;
&lt;p&gt;我想，没有什么比爱更好的事了。&lt;/p&gt;
&lt;p&gt;爱朴树，爱这没什么旋律又偏重金属的《我去2000年》，压抑而又嘈乱，爱他吞吞吐吐时的样子&lt;/p&gt;
&lt;p&gt;爱小波，爱那些无奈的黑色幽默，又例如《三十而立》，又如那龟头血肿李
      
    
    </summary>
    
      <category term="GREAT LIFE" scheme="https://jiawanlong.github.io/categories/GREAT-LIFE/"/>
    
    
      <category term="生活" scheme="https://jiawanlong.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="我爱这被风带走不会再有的每一天" scheme="https://jiawanlong.github.io/tags/%E6%88%91%E7%88%B1%E8%BF%99%E8%A2%AB%E9%A3%8E%E5%B8%A6%E8%B5%B0%E4%B8%8D%E4%BC%9A%E5%86%8D%E6%9C%89%E7%9A%84%E6%AF%8F%E4%B8%80%E5%A4%A9/"/>
    
  </entry>
  
  <entry>
    <title>leaflet汇总</title>
    <link href="https://jiawanlong.github.io/2018/11/08/leaflet%E6%B1%87%E6%80%BB/"/>
    <id>https://jiawanlong.github.io/2018/11/08/leaflet汇总/</id>
    <published>2018-11-08T10:34:21.137Z</published>
    <updated>2018-11-08T10:44:20.285Z</updated>
    
    <content type="html"><![CDATA[<p>乱七八糟的功能，没时间总结。。。纯当笔记了</p><ul><li><a href="https://jiawanlong.github.io/demo/leaflet/leaflet%E6%96%87%E5%AD%97%E6%A0%87%E6%B3%A8.html">leaflet文字标注</a></li><li><a href="https://jiawanlong.github.io/demo/leaflet/leaflet%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%9C%86%E7%BA%BF.html">leaflet多边形圆线</a></li><li><a href="https://jiawanlong.github.io/demo/leaflet/leaflet%E5%90%84%E7%A7%8D%E4%BA%8B%E4%BB%B6.html">leaflet各种事件</a></li><li><a href="https://jiawanlong.github.io/demo">leaflet量距和量面完整包下载</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;乱七八糟的功能，没时间总结。。。纯当笔记了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jiawanlong.github.io/demo/leaflet/leaflet%E6%96%87%E5%AD%97%E6%A0%87%E6%B3%A8.html&quot;&gt;l
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="leaflet" scheme="https://jiawanlong.github.io/tags/leaflet/"/>
    
      <category term="gis" scheme="https://jiawanlong.github.io/tags/gis/"/>
    
  </entry>
  
  <entry>
    <title>vuex小白入门</title>
    <link href="https://jiawanlong.github.io/2018/10/11/vuex%E5%B0%8F%E7%99%BD%E5%85%A5%E9%97%A8/"/>
    <id>https://jiawanlong.github.io/2018/10/11/vuex小白入门/</id>
    <published>2018-10-11T07:12:15.369Z</published>
    <updated>2018-10-11T07:12:55.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先：Vuex是什么？"><a href="#首先：Vuex是什么？" class="headerlink" title="首先：Vuex是什么？"></a>首先：Vuex是什么？</h2><p>有关于Vuex，官网是这样定义的：Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式</strong>。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。<br>我是这么认为的：Vuex是为了解决多个组件共享状态而存在的。他能够有效的解决兄弟组件，父子组件，爷孙组件的传值。他将组件的共享状态抽取出来，以一个全局单例模式管理。</p><h5 id="Vuex有以下5个重要属性："><a href="#Vuex有以下5个重要属性：" class="headerlink" title="Vuex有以下5个重要属性："></a>Vuex有以下5个重要属性：</h5><p><strong>1、State</strong><br>单一状态树，每个应用将仅仅包含一个 store 实例。<br><strong>2、Getter</strong><br>可以认为是 store 的计算属性，getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。<br><strong>3、Mutation</strong><br>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。<br><strong>4、Action</strong><br>类似于 mutation，在于Action 提交的是 mutation，而不是直接变更状态；Action 可以包含任意异步操作<br><strong>5、Module</strong><br>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter。模块内部的 action、mutation 和 getter 是注册在全局命名空间的。</p><h3 id="1、不使用Module开发"><a href="#1、不使用Module开发" class="headerlink" title="1、不使用Module开发"></a>1、不使用Module开发</h3><ul><li><p>文件存放</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">└── store</span><br><span class="line">    ├── index.js          # 我们组装模块并导出 store 的地方</span><br><span class="line">    ├── state.js          # 跟级别的 state</span><br><span class="line">    ├── getters.js        # 跟级别的 getter</span><br><span class="line">    └── mutations.js      # 根级别的 mutation</span><br></pre></td></tr></table></figure></li><li><p>index.js存放的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import vue from &apos;vue&apos;;</span><br><span class="line">import vuex from &apos;vuex&apos;;</span><br><span class="line">import state from &apos;./state.js&apos;;</span><br><span class="line">import * as getters from &apos;./getters.js&apos;;</span><br><span class="line">import mutations from &apos;./mutations.js&apos;;</span><br><span class="line"></span><br><span class="line">vue.use(vuex);</span><br><span class="line"></span><br><span class="line">export default new vuex.Store(&#123;</span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  mutations</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>state.js存放的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const state = &#123;</span><br><span class="line">  name: &apos;jwl&apos;,</span><br><span class="line">  age: 24</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">export default state;</span><br></pre></td></tr></table></figure></li><li><p>getters.js存放的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">export const name = (state) =&gt; &#123;</span><br><span class="line">    return state.name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export const age = (state) =&gt; &#123;</span><br><span class="line">    return state.age</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export const other = (state) =&gt; &#123;</span><br><span class="line">    return `My name is $&#123;state.name&#125;, I am $&#123;state.age&#125;.`;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>mutations.js存放的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">    SET_NAME(state, name) &#123;</span><br><span class="line">        state.name = name;</span><br><span class="line">    &#125;,</span><br><span class="line">    SET_AGE(state, age) &#123;</span><br><span class="line">        state.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>main.js存放的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import App from &apos;./App.vue&apos;;</span><br><span class="line">import Vue from &apos;vue&apos;;</span><br><span class="line">import router from &apos;./router/index.js&apos;</span><br><span class="line">import vuex from &apos;vuex&apos;</span><br><span class="line">import store from &apos;./store&apos;</span><br><span class="line"></span><br><span class="line">Vue.use(vuex);</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>在组件中使用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    姓名 &#123;&#123;name&#125;&#125; </span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    年龄 &#123;&#123;age&#125;&#125;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &#123;&#123;other&#125;&#125;</span><br><span class="line">    &lt;input @click=&quot;changeName&quot; type=&quot;button&quot; value=&apos;改变名字&apos;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; mapGetters, mapMutations ,mapState&#125; from &quot;vuex&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([&quot;name&quot;, &quot;age&quot;, &quot;other&quot;])</span><br><span class="line">    </span><br><span class="line">    //也可以用这个，但mapGetters要强大</span><br><span class="line">    //...mapState([&quot;name&quot;, &quot;age&quot;, &quot;other&quot;])</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    ...mapMutations(&#123;</span><br><span class="line">      setName: &quot;SET_NAME&quot;,</span><br><span class="line">      setAge: &quot;SET_AGE&quot;</span><br><span class="line">    &#125;),</span><br><span class="line">    changeName() &#123;</span><br><span class="line">      this.setName(&quot;jiawan&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、使用Module开发"><a href="#2、使用Module开发" class="headerlink" title="2、使用Module开发"></a>2、使用Module开发</h3><ul><li><p>文件存放</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">└── store</span><br><span class="line">    ├── index.js          # 我们组装模块并导出 store 的地方</span><br><span class="line">    └── modules</span><br><span class="line">        ├── demo1.js         # 模块1</span><br><span class="line">        └── demo2.js         # 模块2</span><br></pre></td></tr></table></figure></li><li><p>index.js存放的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import vue from &apos;vue&apos;;</span><br><span class="line">import vuex from &apos;vuex&apos;;</span><br><span class="line">import demo1 from &apos;./modules/demo1.js&apos;;</span><br><span class="line"></span><br><span class="line">vue.use(vuex);</span><br><span class="line"></span><br><span class="line">export default new vuex.Store(&#123;</span><br><span class="line">  modules: &#123;</span><br><span class="line">    demo1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>demo1.js存放的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">const demo1 = &#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    names: `demo1`</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    change2(state, va) &#123;</span><br><span class="line">      state.names = va.new;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">    names(state, getters, rootState) &#123;</span><br><span class="line">      return state.names + &apos;hhhhh&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default demo1;</span><br></pre></td></tr></table></figure></li><li><p>main.js存放的内容不变</p></li><li><strong>在组件中使用</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    //state内容，也可以在计算属性里面</span><br><span class="line">    &#123;&#123;$store.state.demo1.names&#125;&#125;</span><br><span class="line">    &lt;br&gt; </span><br><span class="line">    &#123;&#123;demo1name&#125;&#125; </span><br><span class="line">    &lt;input @click=&quot;changeDemo1Name&quot; type=&quot;button&quot; value=&apos;改变demo1名字&apos;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    //getters内容</span><br><span class="line">    demo1name() &#123;</span><br><span class="line">      return this.$store.getters.names;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    changeDemo1Name() &#123;</span><br><span class="line">      this.$store.commit(&quot;change2&quot;, &#123;</span><br><span class="line">        new: &quot;修改了修改了...&quot;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;首先：Vuex是什么？&quot;&gt;&lt;a href=&quot;#首先：Vuex是什么？&quot; class=&quot;headerlink&quot; title=&quot;首先：Vuex是什么？&quot;&gt;&lt;/a&gt;首先：Vuex是什么？&lt;/h2&gt;&lt;p&gt;有关于Vuex，官网是这样定义的：Vuex 是一个专为 Vue.js
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="vuex" scheme="https://jiawanlong.github.io/tags/vuex/"/>
    
      <category term="vue" scheme="https://jiawanlong.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>图吧加密坐标转XY，图吧坐标转WGS84算法</title>
    <link href="https://jiawanlong.github.io/2018/09/26/%E5%9B%BE%E5%90%A7%E5%8A%A0%E5%AF%86%E5%9D%90%E6%A0%87%E8%BD%ACXY%EF%BC%8C%E5%9B%BE%E5%90%A7%E5%9D%90%E6%A0%87%E8%BD%ACWGS84%E7%AE%97%E6%B3%95/"/>
    <id>https://jiawanlong.github.io/2018/09/26/图吧加密坐标转XY，图吧坐标转WGS84算法/</id>
    <published>2018-09-26T08:09:26.896Z</published>
    <updated>2018-09-26T08:16:14.696Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做网络爬虫，爬全国的POI数据，大约爬了3000多万条，但图吧的坐标都是加密的，类似“HHVSJRWVTTGDD”这样的字符串，还好我跟踪的代码，发现其转换方法，无奈只有js版本，就顺手写了一个python版本的解密算法，但图吧的坐标有自己的坐标系，为了通用，又需要转成wgs84吗，所以我将他们综合了一下。</p><h4 id="1、JS版本"><a href="#1、JS版本" class="headerlink" title="1、JS版本"></a>1、JS版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">var  vp = function(xT) &#123;</span><br><span class="line">      var v6;</span><br><span class="line">      var pk = -1;</span><br><span class="line">      var fE = 0;</span><br><span class="line">      var ub = &apos;&apos;;</span><br><span class="line">      var fH = &apos;&apos;;</span><br><span class="line">      for (var i = 0; i &lt; xT.length; i++) &#123;</span><br><span class="line">          var n8 = parseInt(xT.charAt(i), 36) - 10;</span><br><span class="line">          if (n8 &gt;= 17)</span><br><span class="line">              n8 = n8 - 7;</span><br><span class="line">          ub += (n8).toString(36);</span><br><span class="line">          if (n8 &gt; fE) &#123;</span><br><span class="line">              pk = i;</span><br><span class="line">              fE = n8</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      var n9 = parseInt(ub.substring(0, pk), 16);</span><br><span class="line">      var n0 = parseInt(ub.substring(pk + 1), 16);</span><br><span class="line"></span><br><span class="line">      v6 = new Array();</span><br><span class="line">      v6[0] = (n9 + n0 - parseInt(3409)) / 2;</span><br><span class="line">      </span><br><span class="line">      v6[1] = (n0 - v6[0]) / 100000.0;</span><br><span class="line">      </span><br><span class="line">      v6[0] /= 100000.0;</span><br><span class="line">      if (v6[0] &gt; 180)</span><br><span class="line">          v6[0] -= 360;</span><br><span class="line">      return v6</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function mapBar2WGS84(x, y) &#123;</span><br><span class="line">    x = parseFloat(x) * 100000 % 36000000;</span><br><span class="line">    y = parseFloat(y) * 100000 % 36000000;</span><br><span class="line">    x1 = parseInt( - (((Math.cos(y / 100000)) * (x / 18000)) + ((Math.sin(x / 100000)) * (y / 9000))) + x);</span><br><span class="line">    y1 = parseInt( - (((Math.sin(y / 100000)) * (x / 18000)) + ((Math.cos(x / 100000)) * (y / 9000))) + y);</span><br><span class="line">    x2 = parseInt( - (((Math.cos(y1 / 100000)) * (x1 / 18000)) + ((Math.sin(x1 / 100000)) * (y1 / 9000))) + x + ((x &gt; 0) ? 1 : -1));</span><br><span class="line">    y2 = parseInt( - (((Math.sin(y1 / 100000)) * (x1 / 18000)) + ((Math.cos(x1 / 100000)) * (y1 / 9000))) + y + ((y &gt; 0) ? 1 : -1));</span><br><span class="line">    return [x2 / 100000.0, y2 / 100000.0];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(vp(&quot;HHVSJRWVTTGDD&quot;))</span><br><span class="line">var x = vp(&quot;HHVSJRWVTTGDD&quot;)[0]</span><br><span class="line">var y = vp(&quot;HHVSJRWVTTGDD&quot;)[1]</span><br><span class="line">console.log(mapBar2WGS84(x,y))</span><br></pre></td></tr></table></figure><h4 id="2、Python版本"><a href="#2、Python版本" class="headerlink" title="2、Python版本"></a>2、Python版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">import math</span><br><span class="line"></span><br><span class="line">def itoa(num, radix):</span><br><span class="line">    result = &quot;&quot;</span><br><span class="line">    while num &gt; 0:</span><br><span class="line">        result = &quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;[num % radix] + result</span><br><span class="line">        num /= radix</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">def baseN(num, b):</span><br><span class="line">    return ((num == 0) and &quot;0&quot;) or (baseN(num // b, b).lstrip(&quot;0&quot;) + &quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;[num % b])</span><br><span class="line"></span><br><span class="line">def mapBarKey2XY(xT):</span><br><span class="line">    v6 = []</span><br><span class="line">    pk = -1</span><br><span class="line">    fE = 0</span><br><span class="line">    ub = &apos;&apos;</span><br><span class="line">    for inx, iiii in enumerate(xT):</span><br><span class="line">        n8 = int(iiii,36) - 10</span><br><span class="line">        if n8 &gt;= 17:</span><br><span class="line">            n8 = n8 - 7</span><br><span class="line">        ub += baseN(n8,36)</span><br><span class="line">        if n8 &gt; fE:</span><br><span class="line">            pk = inx</span><br><span class="line">            fE = n8</span><br><span class="line"></span><br><span class="line">    n9 = int(ub[0:pk], 16)</span><br><span class="line">    pks = 0-pk</span><br><span class="line">    n0 = int(ub[pks:], 16)</span><br><span class="line"></span><br><span class="line">    v6.append((n9 + n0 - 3409)/2)</span><br><span class="line">    v6.append((n0 - v6[0])/100000.0)</span><br><span class="line">    v6[0] = v6[0] / 100000.0</span><br><span class="line"></span><br><span class="line">    if v6[0] &gt; 180:</span><br><span class="line">        v6[0] = v6[0] - 360</span><br><span class="line"></span><br><span class="line">    return v6</span><br><span class="line"></span><br><span class="line">def mapBar2WGS84(lng, lat):</span><br><span class="line">    lng = float(lng) * 100000 % 36000000;</span><br><span class="line">    lat = float(lat) * 100000 % 36000000;</span><br><span class="line">    lng1 = int(- (((math.cos(lat / 100000)) * (lng / 18000)) + ((math.sin(lng / 100000)) * (lat / 9000))) + lng)</span><br><span class="line">    lat1 = int(- (((math.sin(lat / 100000)) * (lng / 18000)) + ((math.cos(lng / 100000)) * (lat / 9000))) + lat)</span><br><span class="line">    lng2 = int(- (((math.cos(lat1 / 100000)) * (lng1 / 18000)) + ((math.sin(lng1 / 100000)) * (lat1 / 9000))) + lng + (</span><br><span class="line">        1 if lng &gt; 0 else -1))</span><br><span class="line">    lat2 = int(- (((math.sin(lat1 / 100000)) * (lng1 / 18000)) + ((math.cos(lng1 / 100000)) * (lat1 / 9000))) + lat + (</span><br><span class="line">        1 if lat &gt; 0 else -1))</span><br><span class="line">    return lng2 / 100000.0, lat2 / 100000.0</span><br><span class="line"></span><br><span class="line">print(mapBarKey2XY(&quot;HHVSJRWVTTGDD&quot;))</span><br><span class="line">print(mapBar2WGS84(mapBarKey2XY(&quot;HHVSJRWVTTGDD&quot;)[0],mapBarKey2XY(&quot;HHVSJRWVTTGDD&quot;)[1]))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在做网络爬虫，爬全国的POI数据，大约爬了3000多万条，但图吧的坐标都是加密的，类似“HHVSJRWVTTGDD”这样的字符串，还好我跟踪的代码，发现其转换方法，无奈只有js版本，就顺手写了一个python版本的解密算法，但图吧的坐标有自己的坐标系，为了通用，又需要转
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="图吧" scheme="https://jiawanlong.github.io/tags/%E5%9B%BE%E5%90%A7/"/>
    
      <category term="爬虫" scheme="https://jiawanlong.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="加密坐标" scheme="https://jiawanlong.github.io/tags/%E5%8A%A0%E5%AF%86%E5%9D%90%E6%A0%87/"/>
    
      <category term="坐标转换" scheme="https://jiawanlong.github.io/tags/%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>社会主义好</title>
    <link href="https://jiawanlong.github.io/2018/08/24/%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E5%A5%BD/"/>
    <id>https://jiawanlong.github.io/2018/08/24/社会主义好/</id>
    <published>2018-08-24T08:01:01.436Z</published>
    <updated>2018-08-24T09:08:11.364Z</updated>
    
    <content type="html"><![CDATA[<p>看TG就像看老罗一样，明明知道他不行，还一次又一次的期望，结果却让人一次一次让人失望，因为我不相信他只是个锤子。<br>深圳、寿光完全被封锁死，我还能说什么？社会主义好！如果还有什么是TANK解决不了的，那一定需要高压水枪来帮忙。<br><strong>微博，知乎，朋友圈等所有的图片，相关信息大多刚出来被删除，今日博文仅以图片表达。</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-54b6bbec29c8cc5d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="0.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-25bce4298b341f38.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1工会斗争时间轴.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-c19a58f11f7f3b3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1时间轴2.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-0eed361553ac3357.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.1.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-aecca5ba37d1582d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.2.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-a1cf35961ee2115c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.3.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-388df809500f4f51.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.4.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-e2719f21f6996654.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.5.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-3659273b3f54c54f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.6.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-d8f0624216f0921e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.7.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-cc312b23bf69b14c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.8.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-b9b57c1251885605.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.9.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-ea4c60cc4beb7e16.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-5c3b24cbee94a70a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.1.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-37a7095999ba6b17.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.2.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-5fa7a63a8c98a165.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.3.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-146011de83ab0932.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.4.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-af5137b2dddcd586.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.5.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-2b840a1da804fef7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.6.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-5ac4fc52b19c9caa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.7.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/8040955-d1ceddc3de313c0c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.8.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看TG就像看老罗一样，明明知道他不行，还一次又一次的期望，结果却让人一次一次让人失望，因为我不相信他只是个锤子。&lt;br&gt;深圳、寿光完全被封锁死，我还能说什么？社会主义好！如果还有什么是TANK解决不了的，那一定需要高压水枪来帮忙。&lt;br&gt;&lt;strong&gt;微博，知乎，朋友圈等
      
    
    </summary>
    
      <category term="FUCK FUCK FUCK" scheme="https://jiawanlong.github.io/categories/FUCK-FUCK-FUCK/"/>
    
    
      <category term="FUCK" scheme="https://jiawanlong.github.io/tags/FUCK/"/>
    
      <category term="社会主义好" scheme="https://jiawanlong.github.io/tags/%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E5%A5%BD/"/>
    
  </entry>
  
  <entry>
    <title>supermap专题图</title>
    <link href="https://jiawanlong.github.io/2018/08/15/supermap%E4%B8%93%E9%A2%98%E5%9B%BE/"/>
    <id>https://jiawanlong.github.io/2018/08/15/supermap专题图/</id>
    <published>2018-08-15T02:33:49.889Z</published>
    <updated>2018-08-24T08:03:07.596Z</updated>
    
    <content type="html"><![CDATA[<h3 id="加载热力图"><a href="#加载热力图" class="headerlink" title="加载热力图"></a>加载热力图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var map, tiandituLayer, marker, markers, tianMarkerLayer;</span><br><span class="line">map = new SuperMap.Map(&quot;map&quot;);</span><br><span class="line">tiandituLayer = new SuperMap.Layer.Tianditu();</span><br><span class="line">map.addLayers([tiandituLayer]);</span><br><span class="line">map.setCenter(new SuperMap.LonLat(116,40), 3);</span><br><span class="line"></span><br><span class="line">var heatMapLayer = new SuperMap.Layer.HeatMapLayer(&quot;heatMap&quot;);</span><br><span class="line">map.addLayers([heatMapLayer]);</span><br><span class="line">var heatFeature = new SuperMap.Feature.Vector(</span><br><span class="line">    new SuperMap.Geometry.Point(116,40)</span><br><span class="line">);</span><br><span class="line">    var heatFeature1 = new SuperMap.Feature.Vector(</span><br><span class="line">    new SuperMap.Geometry.Point(116,30)</span><br><span class="line">);</span><br><span class="line">var heatFeatures = [heatFeature,heatFeature1];</span><br><span class="line">heatMapLayer.addFeatures(heatFeatures);</span><br></pre></td></tr></table></figure><h3 id="加载迁徙图"><a href="#加载迁徙图" class="headerlink" title="加载迁徙图"></a>加载迁徙图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">var map, layer,</span><br><span class="line">host = window.isLocal ? window.server : &quot;http://support.supermap.com.cn:8090&quot;,</span><br><span class="line">url = host + &quot;/iserver/services/map-world/rest/maps/World&quot;;</span><br><span class="line">var features = [</span><br><span class="line">    new SuperMap.Feature.Vector(</span><br><span class="line">            new SuperMap.Geometry.Point(120,0),//设置第一个位置</span><br><span class="line">            &#123;</span><br><span class="line">                FEATUREID:&quot;point1&quot;,//设置为点的id</span><br><span class="line">                TIME:0//设置第一个时间</span><br><span class="line">            &#125;</span><br><span class="line">    ),</span><br><span class="line">    new SuperMap.Feature.Vector(</span><br><span class="line">            new SuperMap.Geometry.Point(110,0),//设置第二个位置</span><br><span class="line">            &#123;</span><br><span class="line">                FEATUREID:&quot;point1&quot;,</span><br><span class="line">                TIME:1</span><br><span class="line">            &#125;</span><br><span class="line">    ),</span><br><span class="line">    new SuperMap.Feature.Vector(</span><br><span class="line">            new SuperMap.Geometry.Point(120,0),//设置第二个位置</span><br><span class="line">            &#123;</span><br><span class="line">                FEATUREID:&quot;point2&quot;,</span><br><span class="line">                TIME:0</span><br><span class="line">            &#125;</span><br><span class="line">    ),</span><br><span class="line">    new SuperMap.Feature.Vector(</span><br><span class="line">            new SuperMap.Geometry.Point(130,2),//设置第二个位置</span><br><span class="line">            &#123;</span><br><span class="line">                FEATUREID:&quot;point2&quot;,</span><br><span class="line">                TIME:1</span><br><span class="line">            &#125;</span><br><span class="line">    )</span><br><span class="line">];  </span><br><span class="line">var animatorVector = new SuperMap.Layer.AnimatorVector(&quot;layer&quot;, &#123;&#125;,&#123;</span><br><span class="line">    speed:0.01,</span><br><span class="line">    startTime:0,//设置开始时间为0时刻</span><br><span class="line">    endTime:1//设置结束时间为1时刻</span><br><span class="line">&#125;);</span><br><span class="line">//初始化地图</span><br><span class="line">map = new SuperMap.Map(&quot;map&quot;, &#123;</span><br><span class="line">    controls: [</span><br><span class="line">        new SuperMap.Control.Navigation(),</span><br><span class="line">        new SuperMap.Control.Zoom()]</span><br><span class="line">&#125;);</span><br><span class="line">map.addControl(new SuperMap.Control.MousePosition());</span><br><span class="line">//初始化图层</span><br><span class="line">layer = new SuperMap.Layer.TiledDynamicRESTLayer(&quot;World&quot;, url, null, &#123;maxResolution: &quot;auto&quot;&#125;);</span><br><span class="line">//监听图层信息加载完成事件</span><br><span class="line">layer.events.on(&#123;&quot;layerInitialized&quot;: addLayer&#125;);</span><br><span class="line">function addLayer() &#123;</span><br><span class="line">    map.addLayer(layer);</span><br><span class="line">    map.addLayers([animatorVector]);</span><br><span class="line">    //显示地图范围</span><br><span class="line">    map.setCenter(new SuperMap.LonLat(120, 0), 0);</span><br><span class="line">    animatorVector.addFeatures(features);</span><br><span class="line">    animatorVector.animator.start();</span><br><span class="line">    animatorVector.animator.setSpeed(animatorVector.animator.getSpeed() * 0.7);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;加载热力图&quot;&gt;&lt;a href=&quot;#加载热力图&quot; class=&quot;headerlink&quot; title=&quot;加载热力图&quot;&gt;&lt;/a&gt;加载热力图&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="GIS" scheme="https://jiawanlong.github.io/tags/GIS/"/>
    
      <category term="supermap专题图" scheme="https://jiawanlong.github.io/tags/supermap%E4%B8%93%E9%A2%98%E5%9B%BE/"/>
    
      <category term="专题图" scheme="https://jiawanlong.github.io/tags/%E4%B8%93%E9%A2%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>了不起的Leaflet</title>
    <link href="https://jiawanlong.github.io/2018/07/31/%E4%BA%86%E4%B8%8D%E8%B5%B7%E7%9A%84Leaflet/"/>
    <id>https://jiawanlong.github.io/2018/07/31/了不起的Leaflet/</id>
    <published>2018-07-31T14:12:11.845Z</published>
    <updated>2018-07-31T15:21:36.332Z</updated>
    
    <content type="html"><![CDATA[<p>做为GIS专业的渣渣，毕业之后就很少接触到地图了。虽然辗转于中地和超图之间，但却很少系统的用到地图，之前有用过ol3，但总觉得过于庞大复杂。最近工作中有用到Leaflet，其简洁的语法令人发指，发现还是很适合我等渣渣的。<br>由于Leaflet的本身并不全面，但强大的生态以及插件足以震撼openlayers，此篇博客主要介绍Leaflet的插件用法，包括热力图，聚合图，量测控件。</p><blockquote><p> Leaflet是适用于移动设备的交互式地图的领先开源JavaScript库。它只需要大约38 KB的JS，它具有大多数开发人员所需的所有映射功能。Leaflet的设计考虑了简单性，性能和可用性。它的工作原理有效地跨所有主流桌面和移动平台，可以有很多的扩展插件，有一个美丽的，易于使用和良好记录的API 和一个简单的，可读的源代码。</p></blockquote><h3 id="1、热力图"><a href="#1、热力图" class="headerlink" title="1、热力图"></a>1、热力图</h3><p><img src="https://upload-images.jianshu.io/upload_images/8040955-9bc9446de70fba3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="热力图.png"><br>这里用到的是heatmap.js的这个插件，github的地址是 <a href="https://github.com/jiawanlong/heatmap.js" target="_blank" rel="noopener">heatmap</a>，demo代码地址是 <a href="https://github.com/jiawanlong/heatmap.js/blob/master/examples/leaflet-heatmap/index.html" target="_blank" rel="noopener">demo</a><br>1、首先需要引入JS文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;/build/heatmap.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;/plugins/leaflet-heatmap/leaflet-heatmap.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>2、添加热力图到地图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">var dataArr = [];</span><br><span class="line">for (let index = 0; index &lt; data.length; index++) &#123;</span><br><span class="line">    const element = data[index];</span><br><span class="line">    var obj = &#123; lat: element.smy, lng: element.smx, count: 1 &#125;;</span><br><span class="line">    dataArr.push(obj);</span><br><span class="line">&#125;</span><br><span class="line">var testData = &#123;</span><br><span class="line">    data: dataArr</span><br><span class="line">&#125;;</span><br><span class="line">var cfg = &#123;</span><br><span class="line">    radius: 0.002,</span><br><span class="line">    maxOpacity: 1,</span><br><span class="line">    scaleRadius: true,</span><br><span class="line">    useLocalExtrema: true,</span><br><span class="line">    latField: &quot;lat&quot;,</span><br><span class="line">    lngField: &quot;lng&quot;,</span><br><span class="line">    valueField: &quot;count&quot;</span><br><span class="line">&#125;;</span><br><span class="line">this.heatMapLayer = L.featureGroup().addTo(this.map);</span><br><span class="line">var heatmap = new HeatmapOverlay(cfg);</span><br><span class="line">heatmap.setData(testData);</span><br><span class="line">this.heatMapLayer.addLayer(heatmap);</span><br></pre></td></tr></table></figure></p><p>3、移除图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.heatMapLayer.remove();</span><br></pre></td></tr></table></figure></p><h3 id="2、聚合图"><a href="#2、聚合图" class="headerlink" title="2、聚合图"></a>2、聚合图</h3><p><img src="https://upload-images.jianshu.io/upload_images/8040955-696073988262357c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="聚合图.png"><br>这里用到的是markercluster.js的这个插件，github的地址是 <a href="https://github.com/jiawanlong/Leaflet.markercluster" target="_blank" rel="noopener">markercluster</a>，demo代码地址是，demo展示了加载1000个点的效果 <a href="https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-realworld.10000.html" target="_blank" rel="noopener">demo</a><br>1、将src目录放到自己的库下，引入JS文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;../dist/MarkerCluster.css&quot; /&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;../dist/MarkerCluster.Default.css&quot; /&gt;</span><br><span class="line">&lt;script src=&quot;../dist/leaflet.markercluster-src.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>2、添加聚合图到地图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var juheLayer = L.markerClusterGroup(&#123;disableClusteringAtZoom: 15, chunkedLoading: true &#125;);</span><br><span class="line">for (var i = 0; i &lt; addressPoints.length; i++) &#123;</span><br><span class="line">    var a = addressPoints[i];</span><br><span class="line">    var title = a[2];  //标题</span><br><span class="line">    var marker = L.marker(L.latLng(a[0], a[1]), &#123; title: title &#125;);</span><br><span class="line">    marker.bindPopup(title); //点击时显示气泡</span><br><span class="line">    juheLayer.addLayer(marker);</span><br><span class="line">&#125;</span><br><span class="line">map.addLayer(juheLayer);</span><br></pre></td></tr></table></figure></p><p>3、移除聚合图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map.removeLayer(juheLayer);</span><br></pre></td></tr></table></figure></p><h3 id="3、量测标记控件"><a href="#3、量测标记控件" class="headerlink" title="3、量测标记控件"></a>3、量测标记控件</h3><p><img src="https://upload-images.jianshu.io/upload_images/8040955-57f5efae71375c9e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="控件.png"><br>这里用到的是Leaflet.draw的这个插件，github的地址是 <a href="https://github.com/jiawanlong/Leaflet.draw" target="_blank" rel="noopener">Leaflet.draw</a>，demo代码地址是，<a href="https://leaflet.github.io/Leaflet.draw/docs/examples/full.html" target="_blank" rel="noopener">demo</a>，api的github地址是 <a href="https://leaflet.github.io/Leaflet.draw/docs/leaflet-draw-latest.html" target="_blank" rel="noopener">api</a><br>1、将src目录放到自己的库下，引入JS文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;./lib/draw/leaflet.draw.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/Leaflet.draw.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/Leaflet.Draw.Event.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/Toolbar.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/Tooltip.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/ext/GeometryUtil.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/ext/LatLngUtil.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/ext/LineUtil.Intersect.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/ext/Polygon.Intersect.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/ext/Polyline.Intersect.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/ext/TouchEvents.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/DrawToolbar.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/handler/Draw.Feature.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/handler/Draw.SimpleShape.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/handler/Draw.Polyline.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/handler/Draw.Marker.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/handler/Draw.Circle.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/handler/Draw.CircleMarker.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/handler/Draw.Polygon.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/draw/handler/Draw.Rectangle.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/EditToolbar.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/handler/EditToolbar.Edit.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/handler/EditToolbar.Delete.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/Control.Draw.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/handler/Edit.Poly.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/handler/Edit.SimpleShape.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/handler/Edit.Rectangle.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/handler/Edit.Marker.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/handler/Edit.CircleMarker.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;./lib/draw/edit/handler/Edit.Circle.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>2、完整的控件引入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">var editableLayers = new L.FeatureGroup();</span><br><span class="line">map.addLayer(editableLayers);</span><br><span class="line">var options = &#123;</span><br><span class="line">    position: &apos;topleft&apos;,</span><br><span class="line">    draw: &#123;</span><br><span class="line">        polyline: &#123;&#125;,</span><br><span class="line">        polygon: &#123;&#125;,</span><br><span class="line">        circle: &#123;&#125;,</span><br><span class="line">        rectangle: &#123;&#125;,</span><br><span class="line">        marker: &#123;&#125;,</span><br><span class="line">        remove: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    edit: &#123;</span><br><span class="line">        featureGroup: editableLayers,</span><br><span class="line">        remove: true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">var drawControl = new L.Control.Draw(options);</span><br><span class="line">map.addControl(drawControl);</span><br><span class="line">handleMapEvent(drawControl._container, map);</span><br><span class="line">map.on(L.Draw.Event.CREATED, function (e) &#123;</span><br><span class="line">    var type = e.layerType,</span><br><span class="line">        layer = e.layer;</span><br><span class="line">    if (type === &apos;marker&apos;) &#123;</span><br><span class="line">        layer.bindPopup(&apos;A popup!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    editableLayers.addLayer(layer);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function handleMapEvent(div, map) &#123;</span><br><span class="line">    if (!div || !map) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    div.addEventListener(&apos;mouseover&apos;, function () &#123;</span><br><span class="line">        map.scrollWheelZoom.disable();</span><br><span class="line">        map.doubleClickZoom.disable();</span><br><span class="line">    &#125;);</span><br><span class="line">    div.addEventListener(&apos;mouseout&apos;, function () &#123;</span><br><span class="line">        map.scrollWheelZoom.enable();</span><br><span class="line">        map.doubleClickZoom.enable();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其实，leaflet的功能不仅仅有这些，丰富的<a href="https://leafletjs.com/plugins.html" target="_blank" rel="noopener">插件</a> 更是多的让人抓狂，它简介的语法很适合新手学习，非常适合轻量级的应用开发。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;做为GIS专业的渣渣，毕业之后就很少接触到地图了。虽然辗转于中地和超图之间，但却很少系统的用到地图，之前有用过ol3，但总觉得过于庞大复杂。最近工作中有用到Leaflet，其简洁的语法令人发指，发现还是很适合我等渣渣的。&lt;br&gt;由于Leaflet的本身并不全面，但强大的生态
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="Leaflet" scheme="https://jiawanlong.github.io/tags/Leaflet/"/>
    
      <category term="热力图" scheme="https://jiawanlong.github.io/tags/%E7%83%AD%E5%8A%9B%E5%9B%BE/"/>
    
      <category term="聚合图" scheme="https://jiawanlong.github.io/tags/%E8%81%9A%E5%90%88%E5%9B%BE/"/>
    
      <category term="GIS" scheme="https://jiawanlong.github.io/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>你需要模块化</title>
    <link href="https://jiawanlong.github.io/2018/07/24/%E4%BD%A0%E9%9C%80%E8%A6%81%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    <id>https://jiawanlong.github.io/2018/07/24/你需要模块化/</id>
    <published>2018-07-24T09:42:18.996Z</published>
    <updated>2018-07-31T15:16:59.157Z</updated>
    
    <content type="html"><![CDATA[<p>关于umd cmd amd import export。。。<br>先别慌，最近在给妹妹补课，忙得很，有空会更新。</p><!-- | AMD | AMD | CMD || :------:|  :------: | :------: || 代表 | require.js | sea.js | -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;关于umd cmd amd import export。。。&lt;br&gt;先别慌，最近在给妹妹补课，忙得很，有空会更新。&lt;/p&gt;
&lt;!-- | AMD | AMD | CMD |
| :------:|  :------: | :------: |
| 代表 | require.
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="模块化" scheme="https://jiawanlong.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
      <category term="require.js" scheme="https://jiawanlong.github.io/tags/require-js/"/>
    
      <category term="sea.js" scheme="https://jiawanlong.github.io/tags/sea-js/"/>
    
      <category term="es6" scheme="https://jiawanlong.github.io/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>组件通讯</title>
    <link href="https://jiawanlong.github.io/2018/07/05/%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF/"/>
    <id>https://jiawanlong.github.io/2018/07/05/组件通讯/</id>
    <published>2018-07-05T09:31:22.649Z</published>
    <updated>2018-07-05T09:32:03.281Z</updated>
    
    <content type="html"><![CDATA[<p>组件是vue最主要的语法特性之一，组件可以扩展 HTML 元素，封装可重用的代码。在较高层面上，组件是自定义元素， Vue.js 的编译器为它添加特殊功能。在 Vue 里，一个组件本质上是一个拥有预定义选项的一个 Vue 实例。<br>只有把各组件的通讯运用的游刃有余，才能说自己已经入门了，不是吗？</p><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><h4 id="1、子组件调用父组件的方法"><a href="#1、子组件调用父组件的方法" class="headerlink" title="1、子组件调用父组件的方法"></a>1、子组件调用父组件的方法</h4><ul><li>直接用this.$parent.xxxx这样直接调用父组件的方法。</li><li>用$emit向父组件触发一个事件，父组件监听这个事件就行了。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//父组件</span><br><span class="line">&lt;child @refreshList=&quot;onRefresList&quot;&gt;&lt;/child&gt;  </span><br><span class="line">onRefresList(data)&#123;</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//子组件 </span><br><span class="line">this.$emit(&apos;refreshList&apos;,data);</span><br></pre></td></tr></table></figure></li></ul><h4 id="2、父组件调用子组件的方法"><a href="#2、父组件调用子组件的方法" class="headerlink" title="2、父组件调用子组件的方法"></a>2、父组件调用子组件的方法</h4><ul><li>用this.$children，但得到是一个数组，包含所有的子组件，可通过属性判断</li><li>通过ref调用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//父组件</span><br><span class="line">&lt;coma :das=&quot;da&quot; ref=&quot;comA&quot;&gt;&lt;/coma&gt;   //子</span><br><span class="line">this.$refs.comA.say(&quot;data&quot;);  //调用子的事件，并传值过去</span><br><span class="line">this.$refs.comA.val++;  //改变子的值</span><br><span class="line"></span><br><span class="line">//子组件</span><br><span class="line">say(data)&#123;</span><br><span class="line">    console.log(data);</span><br><span class="line">    alert(&quot;父调用我的&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3、兄弟组件调用方法"><a href="#3、兄弟组件调用方法" class="headerlink" title="3、兄弟组件调用方法"></a>3、兄弟组件调用方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//mian.js</span><br><span class="line">window.EventBus = new Vue();</span><br><span class="line"></span><br><span class="line">//兄弟1（调用者）</span><br><span class="line">EventBus.$emit(&quot;setVal&quot;, data);</span><br><span class="line"></span><br><span class="line">//兄弟2（被调用者）</span><br><span class="line">//mounted()钩子中监听</span><br><span class="line">bus.$on(&apos;setVal&apos;, (data) =&gt; &#123;</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据传递"><a href="#数据传递" class="headerlink" title="数据传递"></a>数据传递</h3><h4 id="1、父组件传子组件"><a href="#1、父组件传子组件" class="headerlink" title="1、父组件传子组件"></a>1、父组件传子组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//父组件</span><br><span class="line">&lt;child :inputName=&quot;name&quot;&gt;&lt;/child&gt;  //name是父组件的data里的值</span><br><span class="line">&lt;child inputName=&quot;name&quot;&gt;&lt;/child&gt;  //name是一个字符串</span><br><span class="line"></span><br><span class="line">//子组件</span><br><span class="line">props: [&quot;inputName&quot;,&quot;head&quot;]</span><br><span class="line">传过来的值不能在data里出现，不能修改，拿到后应用变量存着，其他来操作变量</span><br><span class="line"></span><br><span class="line">//子组件传过来验证、有默认值</span><br><span class="line">props: &#123;</span><br><span class="line">    &apos;head&apos;: Object,</span><br><span class="line">    &apos;pagecount&apos;: &#123;</span><br><span class="line">        default: 5,</span><br><span class="line">        type: Number  //String Number Boolean Function Object Array Symbol</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、子组件传父组件和兄弟组件传值用调用方法解决"><a href="#2、子组件传父组件和兄弟组件传值用调用方法解决" class="headerlink" title="2、子组件传父组件和兄弟组件传值用调用方法解决"></a>2、子组件传父组件和兄弟组件传值用调用方法解决</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;组件是vue最主要的语法特性之一，组件可以扩展 HTML 元素，封装可重用的代码。在较高层面上，组件是自定义元素， Vue.js 的编译器为它添加特殊功能。在 Vue 里，一个组件本质上是一个拥有预定义选项的一个 Vue 实例。&lt;br&gt;只有把各组件的通讯运用的游刃有余，才能
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="vue" scheme="https://jiawanlong.github.io/tags/vue/"/>
    
      <category term="组件" scheme="https://jiawanlong.github.io/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>组件化开发vue入门</title>
    <link href="https://jiawanlong.github.io/2018/07/05/%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91vue%E5%85%A5%E9%97%A8/"/>
    <id>https://jiawanlong.github.io/2018/07/05/组件化开发vue入门/</id>
    <published>2018-07-05T09:27:17.033Z</published>
    <updated>2018-07-05T09:32:10.370Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0、装node（npm）和git"><a href="#0、装node（npm）和git" class="headerlink" title="0、装node（npm）和git"></a>0、装node（npm）和git</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装完成之后，打开命令行工具(win+r，然后输入cmd)，输入 node -v，如果出现相应的版本号，则说明安装成功。</span><br></pre></td></tr></table></figure><h4 id="1、淘宝代理"><a href="#1、淘宝代理" class="headerlink" title="1、淘宝代理"></a>1、淘宝代理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h4 id="2、全局安装webpack"><a href="#2、全局安装webpack" class="headerlink" title="2、全局安装webpack"></a>2、全局安装webpack</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack -g</span><br></pre></td></tr></table></figure><p>安装完成之后输入 webpack -v，如下图，如果出现相应的版本号，则说明安装成功。</p><h4 id="3、全局安装-vue-cli"><a href="#3、全局安装-vue-cli" class="headerlink" title="3、全局安装 vue-cli"></a>3、全局安装 vue-cli</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global vue-cli</span><br></pre></td></tr></table></figure><p>安装完成之后输入 vue -V（注意这里是大写的“V”），如果出现相应的版本号，则说明安装成功。</p><h4 id="4、初始化项目"><a href="#4、初始化项目" class="headerlink" title="4、初始化项目"></a>4、初始化项目</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack jwlPro</span><br></pre></td></tr></table></figure><h4 id="5、-安装依赖"><a href="#5、-安装依赖" class="headerlink" title="5、 安装依赖"></a>5、 安装依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="6、运行"><a href="#6、运行" class="headerlink" title="6、运行"></a>6、运行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h4 id="7、如果报错"><a href="#7、如果报错" class="headerlink" title="7、如果报错"></a>7、如果报错</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i prettier@~1.12.0</span><br></pre></td></tr></table></figure><h4 id="8、打包"><a href="#8、打包" class="headerlink" title="8、打包"></a>8、打包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; config index 下   assetsPublicPath: &apos;./&apos;,</span><br><span class="line">&gt; npm run build</span><br></pre></td></tr></table></figure><h4 id="9、安装vue-router"><a href="#9、安装vue-router" class="headerlink" title="9、安装vue-router"></a>9、安装vue-router</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在项目下 npm install vue-router</span><br></pre></td></tr></table></figure><ul><li><p>在src下建router目录，建index.js文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &quot;vue&quot;;</span><br><span class="line">import Router from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const index = () =&gt; import(&quot;../components/index.vue&quot;);</span><br><span class="line">const blog = () =&gt; import(&quot;../components/blog.vue&quot;);</span><br><span class="line"></span><br><span class="line">Vue.use(Router);</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/&apos;,</span><br><span class="line">      redirect: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/index&apos;,</span><br><span class="line">      name: &apos;index&apos;,</span><br><span class="line">      component: index</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/blog&apos;,</span><br><span class="line">      name: &apos;blog&apos;,</span><br><span class="line">      component: blog</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>在mian.js将路由引入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import App from &apos;./App.vue&apos;;</span><br><span class="line">import Vue from &apos;vue&apos;;</span><br><span class="line">import router from &apos;./router/index.js&apos;</span><br><span class="line"></span><br><span class="line">//全局事件总线 </span><br><span class="line">window.EventBus = new Vue();</span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  router, ////////////////////在这里</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在app.vue文件显示路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;p&gt; &lt;router-link to=&quot;/blog&quot;&gt;Go to blog&lt;/router-link&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt; &lt;router-link to=&quot;/index&quot;&gt;Go to index&lt;/router-link&gt;&lt;/p&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="10、安装axios"><a href="#10、安装axios" class="headerlink" title="10、安装axios"></a>10、安装axios</h4><ul><li><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在项目下 npm install axios</span><br></pre></td></tr></table></figure></li><li><p>使用。在src下建api文件夹，建index.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import axios from &apos;axios&apos;</span><br><span class="line">var ServerIp = &apos;http://118.126.116.187:3002/&apos;</span><br><span class="line"></span><br><span class="line">export const searchBlogTitle = (param) =&gt; &#123;</span><br><span class="line">    return axios.get(`$&#123;ServerIp&#125;api/searchBlogTitle`);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export const searchBlogTitleByKey = (param) =&gt; &#123;</span><br><span class="line">    return axios.get(`$&#123;ServerIp&#125;api/searchBlogByTitle/$&#123;param&#125;/`);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; searchBlogByT, searchBlogTitleByKey &#125; from &quot;../api/api.js&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">   methods:&#123;</span><br><span class="line">       init()&#123;</span><br><span class="line">           searchBlogByT(this.value).then(res =&gt; &#123;</span><br><span class="line">              _this.blogList = res.data.data;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="11、安装element-ui"><a href="#11、安装element-ui" class="headerlink" title="11、安装element-ui"></a>11、安装element-ui</h4><ul><li><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在项目下 npm i element-ui -S</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;;</span><br><span class="line">import ElementUI from &apos;element-ui&apos;;</span><br><span class="line">import &apos;element-ui/lib/theme-chalk/index.css&apos;;</span><br><span class="line">import App from &apos;./App.vue&apos;;</span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;0、装node（npm）和git&quot;&gt;&lt;a href=&quot;#0、装node（npm）和git&quot; class=&quot;headerlink&quot; title=&quot;0、装node（npm）和git&quot;&gt;&lt;/a&gt;0、装node（npm）和git&lt;/h4&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="FUCK WORK" scheme="https://jiawanlong.github.io/categories/FUCK-WORK/"/>
    
    
      <category term="vue" scheme="https://jiawanlong.github.io/tags/vue/"/>
    
      <category term="组件化" scheme="https://jiawanlong.github.io/tags/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
      <category term="开发环境" scheme="https://jiawanlong.github.io/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>别，千万别</title>
    <link href="https://jiawanlong.github.io/2018/06/25/%E5%88%AB%EF%BC%8C%E5%8D%83%E4%B8%87%E5%88%AB/"/>
    <id>https://jiawanlong.github.io/2018/06/25/别，千万别/</id>
    <published>2018-06-25T02:45:57.631Z</published>
    <updated>2018-06-28T12:08:00.146Z</updated>
    
    <content type="html"><![CDATA[<p>《别，千万别》是收录在朴树《我去2000年》中很不起眼的一首歌，但我认为，它很值得作为我的第一篇博客的名称。</p><p>纠结了很久下不了笔在于，许久后当我看到这篇博客就会如同现在看到一年前写的博客那样，说不上幼稚，却会让我老脸一红。可我又不能不写，虽然也说不上为什么不能不写。其实所有的纠结后结果在于，我还会写的，因为无论如何，这代表着我现在的心态，我目前所思考的，关心的。所以我也就不自信的给自己自信，多年后看到此句一定会感谢自己记录了这么多的我，活生生的我，血淋淋的我。</p><p>今天是6月28号，中招考试已结束两天，高考成绩也出来两三天了。还记得九年前，第一次坐长途汽车，第一次去县城，如今狗模狗样带着眼镜。</p><p>我曾不止一遍问过我自己，这世界公平吗？河南90多万考生要和其他省几万考生去考一个学校，难度相比有几十倍。公平吗？我确实麻痹过自己，给自己很多鸡汤，说很公平，因为是金子总会发光。现在想起来，尼玛狗屁，不公平就是不公平，统治者用来驯服你的，你却作为真理，操。何为公平？公平对于少数民族来说，加分了就是公平，对于天津人来说，按省份招生就是公平，对于河南人来说，公平就是公平。</p><p>问题除了不公平之外重点还在于，被奴化了的。打个比方，如果全国统一招生，统一试卷，少数民族不加分，不用想结果就是，边疆，北津上等地纷纷骚动，因为是既得利益者受损。所以统治者为了维护既有的稳定性，万万不能公平。那么你会问为何人口大省却为何不上书求公平，这就是问题所在。其实也算不上奴化，在这部分人中，他们会尽可能找机会把户口转到北上津，边疆，以享受不同于周围人的变态的快感。</p><p>今年上海高考作文是“被需要”。我看到后也在想，什么才是被需要的？我吗？显然不是，地球吗？也未必，中共，可能吧！认识我的人可能都知道我站队崔永元，我猜很多人会说他是被需要的。可是是吗？他揭露的在于资本家掠夺股民，俗称割韭菜，可股民是无辜的吗？未必，股民也是抱着暴富心态入股的，那么在入股时就知道也考虑了“不可预知性”。不可否认是偷税戏子以及无良资本家是该死的。如果说崔永元是被需要的，如果我们偌大的社会需要靠一己之力去带动，那么我想这是不需要的，就让它彻底的死吧。今天我姑且再相信资本家的怀疑如果一切都是真的，如果秋冬时没有真正的正义到来，那么这件事将带来无比大的伤害，充满戾气又死气沉沉的时代，会把最后一点希望带走。恭喜我们，已经进入了美好的社会主义社会。</p><p>其实现在大多数人没人关心姓资还是姓社，虽然它基本上没啥去别了。但婊子立牌坊这件事就很不好，对牌坊不公平。你也可以理解成是对“社”字的侮辱。</p><p>如果说《了不起的盖茨比》是美国梦最典型的代表的话，那么我其实是很不想做中国梦。梦中每个人都打了鸡血，充满着希望，充满了希望，社会在进步，这固然是好的，我不否认。可我怕梦遗。在这个认钱的时代，很多人还知道它还有一个名字叫人民币。我想终究有一天你会像我一样，厌倦了这个冷漠操蛋虚假的时代。如果死后所有人都需要进油锅的话，我现在申请一个人独占一个锅。</p><p>记得一个多月前的下午拿快递的路上，看到有夫妻俩抱着孩子跪在路口，牌子上写救救孩子。我没带现金的习惯。就先上楼去拿钱。在回去那段路上，我竟没忍住没理由的哭了。那是我外爷去世后第一次哭。后来我把钱放下的时候，我没敢低头去看他们，也不愿让他们看到我。半个月前，还是拿快递的路上，一对湖南的老夫妇同样为了孩子，依旧没带现金，依旧跑回去再下来。在我给之前看到了一个老大哥，一看就是干体力活的，他将几个钢币丢到了那里，一开始我还是觉得这样不好的。在回去的路上，我突然意识到这不就是和我爸一样吗？可能他没什么文化，也不讲究什么礼貌，他依旧是值得尊重的。</p><p>记得过年父亲还教我，一定要有慈善之心，哪怕知道有的是假的，也要有慈善之心，因为别人之所以这么做肯定有原因。我那天和父亲争辩了，我认为假的就是假的，比如说看到车站伸手要钱的老头老婆，不给就骂的人，我会愤怒的想把碗里钱拿走再踢他一顿。妈的，明明手脚灵活还要倚老卖老，真应该快点死了。那天的争论在于没有结果，父亲告诉我，以后他看到后无论对方是什么人也都会给，而我也表明了态度，不动手打人。其实无论是那个老大哥，还是我父亲，都没什么值得称赞的，因为他们都在尽一个做人的本分。无恻隐之心，非人也。</p><p>我基本每天都会问自己活着的意义，我知道这辈子都不可能知道结果，可我依旧好奇。我当然知道，绝大多数人只有躺在长床上了才去思考这个问题，而万一某天点背直接被车撞凉，那和一只天天疲命奔波于运食物而被人无意踩死的蚂蚁有和区别，是多么的悲凉，可怜。</p><p>我曾说过我恐惧未来，我恐惧自己会如朴树所说的面无表情，只关心粮食和电视。现在想想有什么可怕的，未来可能会更糟，但过去也没那么好，可能动物世界的本质就在于肥胖，贪婪，傲慢，人究竟也不能幸免。</p><p>让不成熟的都快成长吧。让成熟了的都快开放吧。</p><p>去吧，你会得到你期待的人生。</p><p>别，千万别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">别 做梦 你已二十四岁了</span><br><span class="line">生活已经严厉得象传达室李老伯</span><br><span class="line">快别 迷恋远方</span><br><span class="line">看看你家的米缸</span><br><span class="line">生活不在风花月</span><br><span class="line">而是碗里酱醋盐</span><br><span class="line">去 面对 那些生存的硝烟</span><br><span class="line">你可知人情冷暖</span><br><span class="line">你可知世事艰险</span><br><span class="line">天真是一种罪</span><br><span class="line">在你成人的世界</span><br><span class="line">生活不在风花月</span><br><span class="line">而是你辛辛苦苦从别人手里赚来的钱</span><br><span class="line">让不成熟的都快成长吧</span><br><span class="line">让不成熟的都快快地成长</span><br><span class="line">让成熟了的都快开放吧</span><br><span class="line">让成熟了的都通通的开放</span><br><span class="line">这世界太快了</span><br><span class="line">从不等待 让我们很尴尬</span><br><span class="line">它从不等待 让我们很尴尬</span><br><span class="line">它从不宽容 让我们很尴尬</span><br><span class="line">你去手忙脚步乱吧</span><br><span class="line">快去手忙脚步乱吧</span><br><span class="line">你去勾心斗角吧</span><br><span class="line">快去勾心斗角吧</span><br><span class="line">那面无表情的人就是你的未来</span><br><span class="line">可别像隔壁老张整日哀叹表春已荒</span><br><span class="line">可又让我怎么能</span><br><span class="line">不做那些梦 </span><br><span class="line">那些梦</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;《别，千万别》是收录在朴树《我去2000年》中很不起眼的一首歌，但我认为，它很值得作为我的第一篇博客的名称。&lt;/p&gt;
&lt;p&gt;纠结了很久下不了笔在于，许久后当我看到这篇博客就会如同现在看到一年前写的博客那样，说不上幼稚，却会让我老脸一红。可我又不能不写，虽然也说不上为什么不能
      
    
    </summary>
    
      <category term="GREAT LIFE" scheme="https://jiawanlong.github.io/categories/GREAT-LIFE/"/>
    
    
      <category term="别，千万别" scheme="https://jiawanlong.github.io/tags/%E5%88%AB%EF%BC%8C%E5%8D%83%E4%B8%87%E5%88%AB/"/>
    
      <category term="生活" scheme="https://jiawanlong.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>前记—博客的出生</title>
    <link href="https://jiawanlong.github.io/2018/06/18/%E5%89%8D%E8%AE%B0%E2%80%94%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%87%BA%E7%94%9F/"/>
    <id>https://jiawanlong.github.io/2018/06/18/前记—博客的出生/</id>
    <published>2018-06-18T03:57:54.456Z</published>
    <updated>2018-06-25T02:51:41.972Z</updated>
    
    <content type="html"><![CDATA[<p>2015年大三至今，我的博客从免费虚拟空间+独立域名，到阿里云主机，腾讯云主机。到现在，我突然觉得折腾够了，我想一个安稳的地方，让我只关注内容的写作本身。当然，我的个人网站还在运行，<a href="http://www.wejser.com" target="_blank" rel="noopener">贾宛龙</a>，博客功能迁移还在，但不在维护更新，我的 <a href="http://book.wejser.com" target="_blank" rel="noopener">简书</a>上偶尔还会发表技术文章，但也会陆陆续续转移到这里。</p><blockquote><p>在这里抛弃其他的，只谈技术，其实很简单，我的技术栈是github page+hexo，没有编程经验的同学看看文章摸索两遍也可以实现。</p></blockquote><h3 id="1、安装软件环境"><a href="#1、安装软件环境" class="headerlink" title="1、安装软件环境"></a>1、安装软件环境</h3><p>首先需要安装新版本的node，它本身包含着npm，而且会自动帮你安装至环境变量，非常傻瓜化，此外还需要安装git，为了将代码同步到github上面。这两个软件在官网搜索安装适合本机的就行。</p><h3 id="2、安装淘宝镜像"><a href="#2、安装淘宝镜像" class="headerlink" title="2、安装淘宝镜像"></a>2、安装淘宝镜像</h3><p>由于墙的原因，我们不得不借助淘宝镜像这样的高效率东西来提升效率，在这我选的是全局安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p><h3 id="3、安装hexo脚手架"><a href="#3、安装hexo脚手架" class="headerlink" title="3、安装hexo脚手架"></a>3、安装hexo脚手架</h3><p>因为我的博客是基于hexo而搭建的。那么全局安装hexo也是必须的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p><h3 id="4、初始化hexo项目"><a href="#4、初始化hexo项目" class="headerlink" title="4、初始化hexo项目"></a>4、初始化hexo项目</h3><p>在这里，你需要新建一个文件夹作为你的项目存放地，在文件夹里，右键git执行hexo init初始化一个hexo最基本的项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></p><h3 id="5、安装hexo的依赖"><a href="#5、安装hexo的依赖" class="headerlink" title="5、安装hexo的依赖"></a>5、安装hexo的依赖</h3><p>在这一步骤主要是将安装博客依赖的环境，比如vue，jquery等包文件，我们这里只需执行命令，让它自己安装即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></p><h3 id="6、打包项目"><a href="#6、打包项目" class="headerlink" title="6、打包项目"></a>6、打包项目</h3><p>此时项目已经完成初始化操作，但还没有我们常见的html文件等，此时需要将hexo项目打包成浏览器可以运行的静态文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></p><p>当执行完命令，你会发现在文件夹多了public文件夹，点开则看到了我们熟悉的index.html等文件</p><h3 id="7、本地运行"><a href="#7、本地运行" class="headerlink" title="7、本地运行"></a>7、本地运行</h3><p>当安装完hexo，以及其依赖，我们则可以在本地运行hexo为我们提供的脚手架页面，此时执行hexo s 则控制台显示成功，打开浏览器，输入<a href="http://localhost:4000，则可查看hello" target="_blank" rel="noopener">http://localhost:4000，则可查看hello</a> owrld<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><h3 id="8、注册github账号"><a href="#8、注册github账号" class="headerlink" title="8、注册github账号"></a>8、注册github账号</h3><p>因为我的网站是寄托github，所以需要注册github账号，github为每一个用户提供了一个单独的可直接访问的项目，注意此项目的的项目名必须是用户名，记得开启page功能，如果成功后，访问 <strong>用户名.github.io</strong> 则能直接运行这个项目，但只限于静态文件。我的地址是<strong>jiawanlong.github.io</strong> 访问地址是 <a href="https://jiawanlong.github.io">博客</a></p><h3 id="9、配置hexo指向github"><a href="#9、配置hexo指向github" class="headerlink" title="9、配置hexo指向github"></a>9、配置hexo指向github</h3><p>在这里主要是将博客自动同步到自己刚创建的github账号下的pages下，需要修改根目录下的config.yml，注意每一个单词前的空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:jiawanlong/jiawanlong.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><h3 id="10、生成key文件"><a href="#10、生成key文件" class="headerlink" title="10、生成key文件"></a>10、生成key文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;自己的github关联的邮箱&quot;</span><br></pre></td></tr></table></figure><p>如果执行失败，则执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent -s</span><br><span class="line">eval `ssh-agent -s`</span><br><span class="line">ssh-add</span><br></pre></td></tr></table></figure></p><p>在这里三按回车键，执行完会发现，本地的c盘下，用户名文件夹下多了个.ssh文件夹</p><h3 id="11、复制key文件到github"><a href="#11、复制key文件到github" class="headerlink" title="11、复制key文件到github"></a>11、复制key文件到github</h3><p>用记事本打开并复制.ssh文件夹下id_rsa.pub的内容，到github账号下的settting下的ssh选项，在这里title可以随意填写，将key粘贴下面</p><h3 id="12、测试是否关联成功"><a href="#12、测试是否关联成功" class="headerlink" title="12、测试是否关联成功"></a>12、测试是否关联成功</h3><p>git bash 里输入以下代码 不要改任何一个字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">success ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>当询问yes or no时选yes，如果出现success,则表示成功</p><h3 id="13、完善个人github信息"><a href="#13、完善个人github信息" class="headerlink" title="13、完善个人github信息"></a>13、完善个人github信息</h3><p>如果github都不知道我们是谁，怎么会让我们提交代码呢？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;github名字&quot;</span><br><span class="line">git config --global user.email &quot;github邮箱&quot;</span><br></pre></td></tr></table></figure></p><h3 id="14、安装-hexo-deployer"><a href="#14、安装-hexo-deployer" class="headerlink" title="14、安装 hexo-deployer"></a>14、安装 hexo-deployer</h3><p>除了上述外，还需要安装 hexo-deployer 来进行傻瓜化自动部署，将本地的hexo项目通过命令自动部署github上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><h3 id="15、部署"><a href="#15、部署" class="headerlink" title="15、部署"></a>15、部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>此时，打开<strong>你的用户名.github.io</strong>，则可以看到本地的hexo已经部署到github page上面，博客就此完成</p><h3 id="16、完善"><a href="#16、完善" class="headerlink" title="16、完善"></a>16、完善</h3><p>当打开项目时候，发现很卡，通过f12发现啊，妈的，jquery是google的，所以握全局查找，将juqery的路径替换了一下，重新clean后，再次部署，美滋滋<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;http://code.jquery.com/jquery-latest.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="16、安装主题"><a href="#16、安装主题" class="headerlink" title="16、安装主题"></a>16、安装主题</h3><p>确认过眼神，maupassant就是我想要的主题，某大神已经将主题的脚手架搭建好，包括评论功能，百度统计，以及页面访问量等功能<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class="line">npm install hexo-renderer-pug --save</span><br><span class="line">npm install hexo-renderer-sass --save</span><br></pre></td></tr></table></figure></p><h3 id="17、配置主题"><a href="#17、配置主题" class="headerlink" title="17、配置主题"></a>17、配置主题</h3><p>修改根目录下的config.yml ，找到theme选项，改成maupassant，则重新打包生成，发现已经焕然一新<br>将语言设置成中文<br>在主题的配置项可以配置livere评论账号，则博客加了评论功能，添加百度统计账号，则会自动关联上，可以查看博客的实时访问人，及其ip，城市等</p><h3 id="18、就这样，棒"><a href="#18、就这样，棒" class="headerlink" title="18、就这样，棒"></a>18、就这样，棒</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2015年大三至今，我的博客从免费虚拟空间+独立域名，到阿里云主机，腾讯云主机。到现在，我突然觉得折腾够了，我想一个安稳的地方，让我只关注内容的写作本身。当然，我的个人网站还在运行，&lt;a href=&quot;http://www.wejser.com&quot; target=&quot;_blank
      
    
    </summary>
    
      <category term="WHAT A BLOG" scheme="https://jiawanlong.github.io/categories/WHAT-A-BLOG/"/>
    
    
      <category term="博客" scheme="https://jiawanlong.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="github" scheme="https://jiawanlong.github.io/tags/github/"/>
    
      <category term="hexo" scheme="https://jiawanlong.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
