import{_ as s,c as n,a0 as t,o as e}from"./chunks/framework.BYlfzdEH.js";const u=JSON.parse('{"title":"CLASS","description":"","frontmatter":{},"headers":[],"relativePath":"vue2/style.md","filePath":"vue2/style.md"}'),l={name:"vue2/style.md"};function p(o,a,i,c,r,d){return e(),n("div",null,a[0]||(a[0]=[t(`<h1 id="class" tabindex="-1">CLASS <a class="header-anchor" href="#class" aria-label="Permalink to &quot;CLASS&quot;">​</a></h1><h2 id="_1、最通用的写法" tabindex="-1">1、最通用的写法 <a class="header-anchor" href="#_1、最通用的写法" aria-label="Permalink to &quot;1、最通用的写法&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;p :style=&quot;{color:conFontColor,backgroundColor:conBgColor}&quot;&gt;{{con.title}}&lt;/p&gt;</span></span></code></pre></div><h2 id="_2、三元表达式写法" tabindex="-1">2、三元表达式写法 <a class="header-anchor" href="#_2、三元表达式写法" aria-label="Permalink to &quot;2、三元表达式写法&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;p :style=&quot;{color:(index==0?arr.conFontColor:&#39;#000&#39;)}&quot; &gt;&lt;/p&gt;</span></span>
<span class="line"><span>&lt;!-- 合并写法 --&gt;</span></span>
<span class="line"><span>&lt;p :style=&quot;{fontFamily:arr.conFontFamily,fontSize:(Boolean ? &#39;18px&#39;:&#39;12px&#39;),color:arr.conFontColor}&quot;&gt;&lt;/p&gt;</span></span></code></pre></div><h2 id="_3、对象写法" tabindex="-1">3、对象写法 <a class="header-anchor" href="#_3、对象写法" aria-label="Permalink to &quot;3、对象写法&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;p :style=&quot;styleObj&quot;&gt;&lt;/p&gt;</span></span>
<span class="line"><span>data(){</span></span>
<span class="line"><span>  return{</span></span>
<span class="line"><span>    styleObj:{color:&#39;#000&#39;},</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="_4、数组写法" tabindex="-1">4、数组写法 <a class="header-anchor" href="#_4、数组写法" aria-label="Permalink to &quot;4、数组写法&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;p :style=&quot;[styleObj,styleObj2]&quot;&gt;&lt;/p&gt;</span></span>
<span class="line"><span>data(){</span></span>
<span class="line"><span>  return{</span></span>
<span class="line"><span>    styleObj:{color:&#39;#000&#39;},</span></span>
<span class="line"><span>    styleObj2:{backgroundColor:&#39;#fff&#39;},</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,9)]))}const g=s(l,[["render",p]]);export{u as __pageData,g as default};
